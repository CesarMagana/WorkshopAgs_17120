{
	"info": {
		"_postman_id": "4baba3ea-f3ad-4814-82e6-042d66d38712",
		"name": "WorkshopAgs",
		"description": "Colecci√≥n con los requests vistos en el workshop de Aguascalientes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1 Create Trello board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ef3f8e45-f38f-41ad-924b-170c9ba305e5",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Validate Board Name is created as expected\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Board From Postman\");",
							"});",
							"",
							"pm.environment.set(\"boardId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?name=Board From Postman&defaultLists=false&key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Board From Postman"
						},
						{
							"key": "defaultLists",
							"value": "false"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"description": "Create new Trello board"
			},
			"response": []
		},
		{
			"name": "2 Create ToDo List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c31150dd-d6ef-4259-bbaf-c26c463c2ac5",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate ToDo card was created as expected\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"ToDo\");",
							"});",
							"",
							"",
							"pm.environment.set(\"CardToDo\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?name=ToDo&idBoard={{boardId}}&key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "ToDo"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"description": "Request to reate a new List called \"ToDo\" in the board \"Board From Postman\""
			},
			"response": []
		},
		{
			"name": "3 Create Done List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "896e881c-0bb0-4d98-a26b-53ba64fcb94d",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate Done card was created as expected\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"Done\");",
							"});",
							"",
							"",
							"pm.environment.set(\"CardDone\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?name=Done&idBoard={{boardId}}&key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Done"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"description": "Create a new list called Done"
			},
			"response": []
		},
		{
			"name": "4 Create New Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cf4e4c7e-ce33-492a-bc12-e5ea6d60c039",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate Card has been created as expected\", function () {",
							"    pm.expect(jsonData.name).to.eql(\"NewCard\");",
							"});",
							"",
							"pm.environment.set(\"cardId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?name=NewCard&idList={{CardToDo}}&key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "name",
							"value": "NewCard"
						},
						{
							"key": "idList",
							"value": "{{CardToDo}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5 Move Card to Done List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b370f80-111b-4266-ad83-17f67652b35e",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate Card has been moved to the Done List\", function () {",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"CardDone\"));",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{cardId}}?idList={{CardDone}}&key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{cardId}}"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{CardDone}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "6 Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5adc574e-23ea-4359-ba86-ad54f9b617b2",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData._value).to.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{boardId}}?key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "7 Get Deleted board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c8c9b76-4761-4cad-bae7-0fbb9d301620",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"The requested resource was not found.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{boardId}}?key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}